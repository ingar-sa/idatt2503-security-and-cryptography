import string

K1 = 0x0123456789ABCDEF0123456789ABCDEF
K2 = 0x1123456789ABCDEF0123456789ABCDEF

K1_xs = "0123456789ABCDEF0123456789ABCDEF"
K2_xs = "1123456789ABCDEF0123456789ABCDEF"

x1 = 0x0100000000000000000000000000000
x2 = 0x0200000000000000000000000000000

x1_xs = "0100000000000000000000000000000"
x2_xs = "0200000000000000000000000000000"

x1K1 = x1 ^ K1
x1K2 = x1 ^ K2

x2K1 = x2 ^ K1


x1_bs = "00000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"

x2_bs = "00000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"

K1_bs = "00000001001000110100010101100111100010011010101111001101111011110000000100100011010001010110011110001001101010111100110111101111"

K2_bs = "00010001001000110100010101100111100010011010101111001101111011110000000100100011010001010110011110001001101010111100110111101111"

x1K1_bs = "00000001001100110100010101100111100010011010101111001101111011110000000100100011010001010110011110001001101010111100110111101111"

x1K2_bs = "00010001001100110100010101100111100010011010101111001101111011110000000100100011010001010110011110001001101010111100110111101111"

x2K1_bs = "00000001000000110100010101100111100010011010101111001101111011110000000100100011010001010110011110001001101010111100110111101111"

hex_alphabet_up = "0123456789ABCDEF"
hex_alphabet_lo = "0123456789abcdef"

def affine_d(y, a_inv, b):
        return hex_alphabet_lo[a_inv*(y - b) % 16]

def affine_e(x, a, b):
        return hex_alphabet_up[(a*x + b) % 16]

def affine_string(input, key):
    s = ""
    for c in input: #i in range(len(input)):
        x = hex_alphabet_lo.index(c)
        s += affine_e(x, key, key)

    print(f"Affine encoding for {input}:\n{s}")

def count_diff_bits(a, b):
    a_l = list(a)
    b_l = list(b)
    count = 0
    
    for i in range(len(a_l)):
        if a_l[i] != b_l[i]:
            count += 1

    print(f"Different bits: {count}")


def main():
    print(f"x1: {x1:0b}")
    print(f"x2: {x2:0b}")
    print()

    print(f"K1: {K1:0b}")
    print(f"K2: {K2:0b}")
    print()

    print(f"x1 xor K1: {x1K1:0b}")
    print(f"x2 xor K1: {x2K1:0b}")
    print()

    affine_string(x1_xs, K1)
    affine_string(x2_xs, K1)
    print()

    print(f"x1 xor K1: {x1K1:0b}")
    print(f"x1 xor K2: {x1K2:0b}")
    print()

    count_diff_bits(x1K1_bs, x1K2_bs)
    print()

    affine_string(x1_xs, K1)
    affine_string(x1_xs, K2)
    print()

    count_diff_bits("0694267ba398480c6b2b9f649be476cb", "7af49a8defad94fa27cb03ac9f1c149a")

main()
